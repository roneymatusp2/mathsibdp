import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Save, User, Mail } from 'lucide-react';

interface SaveResultsFormProps {
  studentInfo?: { name: string; email: string } | null;
  onSaveResults: (name: string, email: string) => void;
  itemVariants: any;
}

const SaveResultsForm: React.FC<SaveResultsFormProps> = ({
  studentInfo,
  onSaveResults,
  itemVariants,
}) => {
  const [showForm, setShowForm] = useState(false);
  const [name, setName] = useState(studentInfo?.name || '');
  const [email, setEmail] = useState(studentInfo?.email || '');

  const handleSave = (e: React.FormEvent) => {
    e.preventDefault();
    onSaveResults(name, email);
    setShowForm(false);
  };

  if (studentInfo) {
    // If student info is already available, don't show the save form/button
    return null;
  }

  return (
    <motion.div className="mb-8" variants={itemVariants}>
      {!showForm ? (
        <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-r">
          <div className="flex">
            <div className="flex-shrink-0">
              <svg
                className="h-5 w-5 text-yellow-400"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <path
                  fillRule="evenodd"
                  d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
                  clipRule="evenodd"
                />
              </svg>
            </div>
            <div className="ml-3">
              <p className="text-sm text-yellow-700">
                Would you like to save your results for discussion with counselors?
              </p>
              <div className="mt-4">
                <motion.button
                  type="button"
                  onClick={() => setShowForm(true)}
                  className="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-school-navy hover:bg-school-navy/90"
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Save className="h-4 w-4 mr-1" />
                  Save Results
                </motion.button>
              </div>
            </div>
          </div>
        </div>
      ) : (
        <div className="bg-white border border-gray-200 rounded-lg p-6">
          <h3 className="text-lg font-medium text-school-navy mb-4">
            Save Your Results
          </h3>
          <form onSubmit={handleSave} className="space-y-4">
            <div>
              <label
                htmlFor="name"
                className="block text-sm font-medium text-gray-700"
              >
                Full Name
              </label>
              <div className="mt-1 relative rounded-md shadow-sm">
                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <User className="h-5 w-5 text-gray-400" />
                </div>
                <input
                  type="text"
                  id="name"
                  className="focus:ring-school-navy focus:border-school-navy block w-full pl-10 sm:text-sm border-gray-300 rounded-md"
                  placeholder="John Smith"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                  required
                />
              </div>
            </div>

            <div>
              <label
                htmlFor="email"
                className="block text-sm font-medium text-gray-700"
              >
                School Email
              </label>
              <div className="mt-1 relative rounded-md shadow-sm">
                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <Mail className="h-5 w-5 text-gray-400" />
                </div>
                <input
                  type="email"
                  id="email"
                  className="focus:ring-school-navy focus:border-school-navy block w-full pl-10 sm:text-sm border-gray-300 rounded-md"
                  placeholder="john.smith@school.edu"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                />
              </div>
            </div>

            <div className="flex space-x-3">
              <motion.button
                type="submit"
                className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-school-navy hover:bg-school-navy/90"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Save className="h-4 w-4 mr-1" />
                Save
              </motion.button>
              <button
                type="button"
                onClick={() => setShowForm(false)}
                className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
              >
                Cancel
              </button>
            </div>
          </form>
        </div>
      )}
    </motion.div>
  );
};

export default SaveResultsForm;
